package multithreading;


/*
* многопоточность - построение программы при котором блоки кода могут
* выполняться одновременно
* цели:
* 1 - выше производительность
* 2 - Cuncurency - выполнение сразу нескольких задач - самое главное  */

public class Example1 {

    public static void main(String[] args) {

        MyThread1 myThread1 = new MyThread1();
        MyThread2 myThread2 = new MyThread2();

        // запуск потоков будут работать одновременно
        // jvm вызывает run сама во время вызова start

        myThread1.start();
        myThread2.start();

        // в данном варианте потоки не синхронизированы друг
        // с другом, какой будет выполняться в какой момент не контролируется
        // при каждом запуске будет по разному

        // в данный момент работаю три потока main и два потока от него
        // "отпочковавшиеся" при этом main может закончиться даже раньше

        // один и тот же поток можно запустить сразу несколько раз

        // если класс уже наследовался от кого - то,
        // то повторное наследование от Thread естественно невозможно
        // в этом случае используем интерфейс см example 2





    }


}

class MyThread1 extends Thread{
    // в этот метод закладывается логика, что должен делать поток
    // override
    public void run(){
        for (int i = 1; i<1000; i++){
            System.out.println(i);
        }
    }
}

class MyThread2 extends Thread{
    // в этот метод закладывается логика, что должен делать поток
    public void run(){
        for (int i = 1000; i>0; i--){
            System.out.println(i);
        }
    }
}



